# –†–ï–ì–£–õ–Ø–†–ù–´–ô –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã, –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
–¢–µ—Å—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
"""
import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from browser_controller import BrowserController
from screen_manager import ScreenManager
from user_activity_detector import UserActivityDetector

logging.basicConfig(
    format='%(asctime)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def test_browser_yandex():
    """–¢–µ—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä–∞ —Å –Ω–æ–≤—ã–º –æ–∫–Ω–æ–º"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢ 1: –Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä + –Ω–æ–≤–æ–µ –æ–∫–Ω–æ")
    print("="*60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –Ø–Ω–¥–µ–∫—Å–æ–º
    browser = BrowserController(browser="Yandex")
    
    print("\n1Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞—é –Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ...")
    await browser.open_on_secondary_monitor()
    
    print("\n2Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ YouTube...")
    await browser.navigate_to("https://www.youtube.com")
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
    print("   - –Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ")
    print("   - –°–æ–∑–¥–∞–Ω–æ –ù–û–í–û–ï –æ–∫–Ω–æ (—Å—Ç–∞—Ä—ã–µ –≤–∫–ª–∞–¥–∫–∏ –Ω–µ —Ç—Ä–æ–Ω—É—Ç—ã)")
    print("   - YouTube –∑–∞–≥—Ä—É–∂–µ–Ω")
    
    await asyncio.sleep(3)

async def test_activity_detector():
    """–¢–µ—Å—Ç –¥–µ—Ç–µ–∫—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢ 2: –î–µ—Ç–µ–∫—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("="*60)
    
    detector = UserActivityDetector()
    
    print("\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...")
    is_active = detector.is_user_active(check_duration=1.0)
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω: {'‚úÖ –î–ê' if is_active else '‚ùå –ù–ï–¢'}")
    
    print("\n2Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è (2 —Å–µ–∫—É–Ω–¥—ã)...")
    print("   –ü–û–î–í–ò–ì–ê–ô–¢–ï –ú–´–®–ö–û–ô ‚Äî –ø–æ—è–≤–∏—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!")
    print("   –ó–∞—Ç–µ–º –Ω–µ –¥–≤–∏–≥–∞–π—Ç–µ 2 —Å–µ–∫—É–Ω–¥—ã.")
    
    success = detector.wait_for_idle(idle_seconds=2.0, show_notification=True)
    
    if success:
        print("   ‚úÖ –î–æ–∂–¥–∞–ª–∏—Å—å –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è")
    else:
        print("   ‚ö†Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è")

async def test_screen_with_detector():
    """–¢–µ—Å—Ç –∫–ª–∏–∫–æ–≤ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢ 3: –ö–ª–∏–∫–∏ —Å –¥–µ—Ç–µ–∫—Ç–æ—Ä–æ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
    print("="*60)
    
    # –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è
    screen = ScreenManager(wait_for_user_idle=True)
    
    print("\n1Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ (—Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –±–µ–∑–¥–µ–π—Å—Ç–≤–∏—è)...")
    print("   –î–í–ò–ì–ê–ô–¢–ï –ú–´–®–ö–û–ô ‚Äî —É–≤–∏–¥–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!")
    print("   –ó–∞—Ç–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã.")
    
    # –ö–ª–∏–∫ –≥–¥–µ-—Ç–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ (–ø—Ä–∞–≤—ã–π –Ω–∏–∂–Ω–∏–π —É–≥–æ–ª –≤—Ç–æ—Ä–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞)
    display = screen.get_secondary_monitor()
    safe_x = display['width'] - 100
    safe_y = display['height'] - 100
    
    screen.click_at(safe_x, safe_y)
    
    print("   ‚úÖ –ö–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è")

async def test_monitor_detection():
    """–¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∞ –∫—É—Ä—Å–æ—Ä–∞"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢ 4: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ –∫—É—Ä—Å–æ—Ä–∞")
    print("="*60)
    
    screen = ScreenManager()
    detector = UserActivityDetector()
    
    print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–Ω–∏—Ç–æ—Ä–∞—Ö:")
    for i, display in enumerate(screen.displays):
        print(f"   –ú–æ–Ω–∏—Ç–æ—Ä {i}: {display['width']}x{display['height']} @ ({display['x']}, {display['y']})")
    
    print("\nüñ±Ô∏è –ü–æ–∑–∏—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞:")
    monitor_index = detector.get_cursor_monitor_index(screen.displays)
    print(f"   –ö—É—Ä—Å–æ—Ä –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–µ: {monitor_index}")
    
    is_secondary = detector.is_cursor_on_secondary_monitor(screen.displays, 1)
    print(f"   –ù–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ: {'‚úÖ –î–ê' if is_secondary else '‚ùå –ù–ï–¢ (–Ω–∞ –ø–µ—Ä–≤–æ–º)'}")
    
    print("\nüí° –ü–æ–¥–≤–∏–≥–∞–π—Ç–µ –∫—É—Ä—Å–æ—Ä –º–µ–∂–¥—É –º–æ–Ω–∏—Ç–æ—Ä–∞–º–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞!")

async def main():
    print("\n" + "#"*60)
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–û–ô –†–ê–ë–û–¢–´")
    print("#"*60)
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ—Å—Ç:\n"
                   "1 - –Ø–Ω–¥–µ–∫—Å.–ë—Ä–∞—É–∑–µ—Ä + –Ω–æ–≤–æ–µ –æ–∫–Ω–æ\n"
                   "2 - –î–µ—Ç–µ–∫—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
                   "3 - –ö–ª–∏–∫–∏ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º\n"
                   "4 - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞\n"
                   "5 - –í—Å–µ —Ç–µ—Å—Ç—ã\n"
                   "–í—ã–±–æ—Ä: ")
    
    try:
        if choice == "1":
            await test_browser_yandex()
        elif choice == "2":
            await test_activity_detector()
        elif choice == "3":
            await test_screen_with_detector()
        elif choice == "4":
            await test_monitor_detection()
        elif choice == "5":
            await test_browser_yandex()
            await test_activity_detector()
            await test_screen_with_detector()
            await test_monitor_detection()
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            return
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}", exc_info=True)
    
    print("\n" + "#"*60)
    print("‚ú® –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")
    print("#"*60)

if __name__ == '__main__':
    asyncio.run(main())
