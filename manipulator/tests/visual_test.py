"""
–í–∏–∑—É–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ
"""
import asyncio
import logging
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))

from screen_manager import ScreenManager
from browser_controller import BrowserController
from command_interpreter import CommandInterpreter
import os
import time

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_browser_on_secondary():
    """–¢–µ—Å—Ç: –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ"""
    print("\n" + "="*60)
    print("üß™ –í–ò–ó–£–ê–õ–¨–ù–´–ô –¢–ï–°–¢: –ë—Ä–∞—É–∑–µ—Ä –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ")
    print("="*60)
    
    screen = ScreenManager()
    browser = BrowserController()
    
    # –°–∫—Ä–∏–Ω—à–æ—Ç –î–û
    print("\n1Ô∏è‚É£ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç –≤—Ç–æ—Ä–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞ –î–û –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
    before = screen.capture_secondary_monitor()
    print(f"   üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {before}")
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    print("\n2Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞—é Safari –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ...")
    await browser.open_on_secondary_monitor()
    await asyncio.sleep(2)
    
    # –°–∫—Ä–∏–Ω—à–æ—Ç –ü–û–°–õ–ï
    print("\n3Ô∏è‚É£ –î–µ–ª–∞—é —Å–∫—Ä–∏–Ω—à–æ—Ç –ü–û–°–õ–ï –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞...")
    after = screen.capture_secondary_monitor()
    print(f"   üì∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {after}")
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ YouTube
    print("\n4Ô∏è‚É£ –û—Ç–∫—Ä—ã–≤–∞—é YouTube...")
    await browser.navigate_to("https://www.youtube.com")
    await asyncio.sleep(3)
    
    youtube_screen = screen.capture_secondary_monitor()
    print(f"   üì∏ YouTube —Å–∫—Ä–∏–Ω—à–æ—Ç: {youtube_screen}")
    
    # –ö–ª–∏–∫ –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    print("\n5Ô∏è‚É£ –ö–ª–∏–∫–∞—é –≤ –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É YouTube...")
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –Ω–∞ YouTube (–ø—Ä–∏–º–µ—Ä–Ω–æ –ø–æ —Ü–µ–Ω—Ç—Ä—É —Å–≤–µ—Ä—Ö—É)
    search_x = 840  # –°–µ—Ä–µ–¥–∏–Ω–∞ —à–∏—Ä–∏–Ω—ã 1680
    search_y = 100  # –í–µ—Ä—Ö
    screen.click_at(search_x, search_y)
    await asyncio.sleep(1)
    
    # –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
    print("\n6Ô∏è‚É£ –í–≤–æ–∂—É '–∫–æ—Ç–∏–∫–∏'...")
    screen.type_text("–∫–æ—Ç–∏–∫–∏")
    await asyncio.sleep(2)
    
    search_screen = screen.capture_secondary_monitor()
    print(f"   üì∏ –ü–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞: {search_screen}")
    
    print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print(f"\nüìÅ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –≤—Ç–æ—Ä–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞:")
    print(f"   - –î–æ: {before}")
    print(f"   - –ü–æ—Å–ª–µ –æ—Ç–∫—Ä—ã—Ç–∏—è: {after}")
    print(f"   - YouTube: {youtube_screen}")
    print(f"   - –ü–æ–∏—Å–∫: {search_screen}")
    print("\nüëÄ –ü–†–û–í–ï–†–¨ –°–ö–†–ò–ù–®–û–¢–´ –í–ò–ó–£–ê–õ–¨–ù–û!")


async def test_gemini_understanding():
    """–¢–µ—Å—Ç –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ Gemini"""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢: Gemini –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥")
    print("="*60)
    
    interpreter = CommandInterpreter()
    
    test_commands = [
        "–í–∫–ª—é—á–∏ –ø–µ—Ä–≤—É—é —Å–µ—Ä–∏—é —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–µ–∑–æ–Ω–∞ –ö–ª–∏–Ω–∫–∞ —Ä–∞—Å—Å–µ–∫–∞—é—â–µ–≥–æ –¥–µ–º–æ–Ω–∞",
        "–û—Ç–∫—Ä–æ–π Spotify –∏ –≤–∫–ª—é—á–∏ –º—É–∑—ã–∫—É",
        "–ù–∞–π–¥–∏ –ø–æ–≥–æ–¥—É –≤ –ú–æ—Å–∫–≤–µ –≤ Google",
        "–û—Ç–∫—Ä–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"
    ]
    
    for cmd in test_commands:
        print(f"\nüìù –ö–æ–º–∞–Ω–¥–∞: '{cmd}'")
        plan = await interpreter.understand_command(cmd)
        print(f"‚úÖ –ü–ª–∞–Ω:\n{plan}\n")
        await asyncio.sleep(1)


async def main():
    print("\n" + "#"*60)
    print("üöÄ –ó–ê–ü–£–°–ö –í–ò–ó–£–ê–õ–¨–ù–´–• –¢–ï–°–¢–û–í")
    print("#"*60)
    
    # –¢–µ—Å—Ç 1: Gemini
    await test_gemini_understanding()
    
    # –¢–µ—Å—Ç 2: –ë—Ä–∞—É–∑–µ—Ä –Ω–∞ –≤—Ç–æ—Ä–æ–º –º–æ–Ω–∏—Ç–æ—Ä–µ
    await test_browser_on_secondary()
    
    print("\n" + "#"*60)
    print("‚ú® –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´")
    print("#"*60)


if __name__ == '__main__':
    asyncio.run(main())
