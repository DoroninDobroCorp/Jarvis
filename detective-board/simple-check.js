import puppeteer from 'puppeteer';

async function simpleCheck() {
  const browser = await puppeteer.launch({ 
    headless: false,
    defaultViewport: null,
    args: ['--start-maximized']
  });
  
  const page = await browser.newPage();
  
  console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–∏–≥...');
  await page.goto('http://localhost:5173/books');
  
  console.log('‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã...');
  await new Promise(resolve => setTimeout(resolve, 3000));
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–Ω–∏–≥–∏
  const hasBooks = await page.evaluate(() => {
    const items = document.querySelectorAll('div[style*="border: 1px solid #ddd"]');
    return items.length > 0;
  });
  
  if (!hasBooks) {
    console.log('üìö –ö–Ω–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ...');
    
    const testBooks = ['–í–æ–π–Ω–∞ –∏ –º–∏—Ä', '–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞'];
    
    for (const book of testBooks) {
      await page.click('input[placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"]');
      await page.evaluate(() => {
        const input = document.querySelector('input[placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"]');
        if (input) {
          input.value = '';
          input.focus();
        }
      });
      await page.type('input[placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏"]', book);
      
      await page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const addButton = buttons.find(btn => btn.textContent.includes('–î–æ–±–∞–≤–∏—Ç—å'));
        if (addButton) addButton.click();
      });
      
      await new Promise(resolve => setTimeout(resolve, 2000));
    }
  }
  
  console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∞—É–¥–∏—Ç...');
  await page.goto('http://localhost:5173/books?audit=1&backfill=1');
  
  console.log('‚è≥ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—É–¥–∏—Ç–∞...');
  await new Promise(resolve => setTimeout(resolve, 15000));
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
  
  const result = await page.evaluate(() => {
    const items = document.querySelectorAll('div[style*="border: 1px solid #ddd"]');
    const results = [];
    
    items.forEach((item, index) => {
      const img = item.querySelector('img');
      const titleEl = item.querySelector('div[style*="font-weight: 700"]');
      const title = titleEl ? titleEl.textContent.trim() : `–ö–Ω–∏–≥–∞ ${index + 1}`;
      const src = img ? img.src : '–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è';
      const isPlaceholder = src.startsWith('data:image/svg+xml');
      
      results.push({ title, src, isPlaceholder });
    });
    
    return results;
  });
  
  console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ (${result.length} –∫–Ω–∏–≥):`);
  
  let placeholderCount = 0;
  result.forEach((book, index) => {
    if (book.isPlaceholder) {
      placeholderCount++;
      console.log(`‚ùå ${index + 1}. "${book.title}" - –ü–õ–ï–ô–°–•–û–õ–î–ï–†`);
    } else {
      console.log(`‚úÖ ${index + 1}. "${book.title}" - –†–ï–ê–õ–¨–ù–ê–Ø –û–ë–õ–û–ñ–ö–ê`);
      console.log(`   ${book.src.substring(0, 80)}...`);
    }
  });
  
  console.log(`\nüìà –ò–¢–û–ì: ${result.length - placeholderCount}/${result.length} –∫–Ω–∏–≥ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±–ª–æ–∂–∫–∏`);
  
  if (placeholderCount === 0) {
    console.log('üéâ –£–°–ü–ï–•! –í—Å–µ –∫–Ω–∏–≥–∏ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±–ª–æ–∂–∫–∏!');
  } else {
    console.log(`‚ùå –ü–†–û–ë–õ–ï–ú–ê: ${placeholderCount} –∫–Ω–∏–≥ –≤—Å–µ –µ—â–µ –∏–º–µ—é—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã`);
  }
  
  console.log('\nüîç –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...');
  console.log('–ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ');
  
  // –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
  await new Promise((resolve) => {
    browser.on('disconnected', resolve);
  });
  
  return placeholderCount === 0;
}

simpleCheck().then(success => {
  console.log(success ? '‚úÖ –¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω!' : '‚ùå –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω!');
  process.exit(success ? 0 : 1);
}).catch(err => {
  console.error('–û—à–∏–±–∫–∞:', err);
  process.exit(1);
});
