import puppeteer from 'puppeteer';

async function checkCovers() {
  const browser = await puppeteer.launch({ headless: false });
  const page = await browser.newPage();
  
  console.log('üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –∞—É–¥–∏—Ç–æ–º...');
  await page.goto('http://localhost:5173/books?backfill=1&audit=1');
  
  console.log('‚è≥ –ñ–¥–µ–º 20 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±—ç–∫—Ñ–∏–ª–ª–∞ –∏ –∞—É–¥–∏—Ç–∞...');
  await new Promise(resolve => setTimeout(resolve, 20000));
  
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–ª–æ–∂–∫–∏ –∫–Ω–∏–≥...');
  
  const results = await page.evaluate(() => {
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
    let items = document.querySelectorAll('div[style*="grid-template-columns: repeat(auto-fill, minmax(220px, 1fr))"] > div');
    
    if (items.length === 0) {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –æ–±—â–∏–π —Å–µ–ª–µ–∫—Ç–æ—Ä
      items = document.querySelectorAll('div[style*="border: 1px solid #ddd"]');
    }
    
    if (items.length === 0) {
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      const allImages = document.querySelectorAll('img');
      console.log('–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', allImages.length);
      allImages.forEach((img, i) => {
        console.log(`–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${i + 1}:`, img.src);
      });
    }
    
    const results = [];
    
    items.forEach((item, index) => {
      const img = item.querySelector('img');
      const titleEl = item.querySelector('div[style*="font-weight: 700"]') || 
                     item.querySelector('div[style*="fontWeight: 700"]') ||
                     item.querySelector('.active-item__title');
      const title = titleEl ? titleEl.textContent : `Item ${index + 1}`;
      const src = img ? img.src : 'No image found';
      
      results.push({
        title,
        src,
        isPlaceholder: src.startsWith('data:image/svg+xml')
      });
    });
    
    return { results, totalItems: items.length, pageUrl: window.location.href };
  });
  
  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${results.results.length} –∫–Ω–∏–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${results.pageUrl}:`);
  console.log(`–í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${results.totalItems}`);
  
  let placeholderCount = 0;
  results.results.forEach((item, index) => {
    if (item.isPlaceholder) {
      placeholderCount++;
      console.log(`‚ùå ${index + 1}. "${item.title}" - –ü–õ–ï–ô–°–•–û–õ–î–ï–†`);
    } else {
      console.log(`‚úÖ ${index + 1}. "${item.title}" - OK (${item.src.substring(0, 50)}...)`);
    }
  });
  
  console.log(`\nüìà –ò—Ç–æ–≥–æ: ${results.results.length - placeholderCount}/${results.results.length} –∫–Ω–∏–≥ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±–ª–æ–∂–∫–∏`);
  
  if (placeholderCount > 0) {
    console.log(`‚ùå –ü–†–û–ë–õ–ï–ú–ê: ${placeholderCount} –∫–Ω–∏–≥ –≤—Å–µ –µ—â–µ –∏–º–µ—é—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã!`);
  } else {
    console.log('üéâ –£–°–ü–ï–•: –í—Å–µ –∫–Ω–∏–≥–∏ –∏–º–µ—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –æ–±–ª–æ–∂–∫–∏!');
  }
  
  await browser.close();
  return placeholderCount === 0;
}

checkCovers().then(success => {
  process.exit(success ? 0 : 1);
}).catch(err => {
  console.error('–û—à–∏–±–∫–∞:', err);
  process.exit(1);
});
