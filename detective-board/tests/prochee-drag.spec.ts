import { test, expect } from '@playwright/test';

/**
 * –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –¥–ª—è –≥—Ä—É–ø–ø—ã "–ü—Ä–æ—á–µ–µ" –∏ –∑–∞–¥–∞—á–∏ "—Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–≤–µ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"
 * –ò–∑–º–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
 * 
 * –ó–ê–ü–£–°–ö: npm run test:prochee
 */

test.describe('–ü—Ä–æ—á–µ–µ - –¢–µ—Å—Ç –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è', () => {
  test('–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ "—Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–≤–µ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞" –≤ –≥—Ä—É–ø–ø–µ –ü—Ä–æ—á–µ–µ', async ({ page }) => {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞...');
    
    // 1. –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    await page.goto('http://localhost:5173?diag=1&log=warn');
    await page.waitForLoadState('networkidle');
    await page.waitForTimeout(1500); // –¥–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ IndexedDB
    
    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');

    // 2. –ò—â–µ–º –≥—Ä—É–ø–ø—É "–ü—Ä–æ—á–µ–µ" –Ω–∞ canvas
    // –ö–æ–Ω–≤–∞ —Ä–µ–Ω–¥–µ—Ä–∏—Ç –≤ canvas, –ø–æ—ç—Ç–æ–º—É –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º –≤—Å–µ —É–∑–ª—ã –∏–∑ store
    const nodes = await page.evaluate(async () => {
      const { useAppStore } = await import('../src/store');
      return useAppStore.getState().nodes;
    });

    console.log(`üìä –í—Å–µ–≥–æ —É–∑–ª–æ–≤ –≤ store: ${nodes.length}`);

    // –ù–∞—Ö–æ–¥–∏–º –≥—Ä—É–ø–ø—É "–ü—Ä–æ—á–µ–µ"
    const procheeGroup = await page.evaluate(async () => {
      const { useAppStore } = await import('../src/store');
      const nodes = useAppStore.getState().nodes;
      return nodes.find((n: any) => 
        n.type === 'group' && 
        n.name && 
        n.name.toLowerCase().includes('–ø—Ä–æ—á–µ–µ')
      );
    });

    if (!procheeGroup) {
      console.log('‚ùå –ì—Ä—É–ø–ø–∞ "–ü—Ä–æ—á–µ–µ" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã:', await page.evaluate(async () => {
        const { useAppStore } = await import('../src/store');
        const nodes = useAppStore.getState().nodes;
        return nodes.filter((n: any) => n.type === 'group').map((n: any) => n.name);
      }));
      throw new Error('–ì—Ä—É–ø–ø–∞ "–ü—Ä–æ—á–µ–µ" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –≥—Ä—É–ø–ø–∞ "–ü—Ä–æ—á–µ–µ": ${procheeGroup.name}`);
    console.log(`   –ü–æ–∑–∏—Ü–∏—è: x=${procheeGroup.x}, y=${procheeGroup.y}`);

    // 3. –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥—Ä—É–ø–ø—É "–ü—Ä–æ—á–µ–µ" (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫)
    const viewport = await page.evaluate(() => {
      const { useAppStore } = (window as any).__vitePreload?.useAppStore || 
                               require('../src/store');
      return useAppStore?.getState().viewport || { x: 0, y: 0, scale: 1 };
    });

    // –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    const groupScreenX = procheeGroup.x * viewport.scale + viewport.x + (procheeGroup.width / 2);
    const groupScreenY = procheeGroup.y * viewport.scale + viewport.y + (procheeGroup.height / 2);

    console.log(`üñ±Ô∏è  –ö–ª–∏–∫–∞–µ–º –Ω–∞ –≥—Ä—É–ø–ø—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º: x=${Math.round(groupScreenX)}, y=${Math.round(groupScreenY)}`);

    // –í—Ö–æ–¥–∏–º –≤ –≥—Ä—É–ø–ø—É –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ (–Ω–∞–¥–µ–∂–Ω–µ–µ)
    await page.evaluate(async (groupId: string) => {
      const { useAppStore } = await import('../src/store');
      useAppStore.getState().enterGroup(groupId);
    }, procheeGroup.id);

    await page.waitForTimeout(500); // –∂–¥—ë–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞

    console.log('‚úÖ –í–æ—à–ª–∏ –≤ –≥—Ä—É–ø–ø—É "–ü—Ä–æ—á–µ–µ"');

    // 4. –ò—â–µ–º –∑–∞–¥–∞—á—É "—Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–≤–µ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"
    const targetTask = await page.evaluate(async (parentId: string) => {
      const { useAppStore } = await import('../src/store');
      const nodes = useAppStore.getState().nodes;
      return nodes.find((n: any) => 
        n.type === 'task' && 
        n.parentId === parentId &&
        n.title && 
        n.title.toLowerCase().includes('—Ç—Ä–µ–≤–µ–ª') &&
        n.title.toLowerCase().includes('–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç')
      );
    }, procheeGroup.id);

    if (!targetTask) {
      console.log('‚ùå –ó–∞–¥–∞—á–∞ "—Å–¥–µ–ª–∞—Ç—å —Ç—Ä–µ–≤–µ–ª –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –≥—Ä—É–ø–ø–µ:', await page.evaluate(async (parentId: string) => {
        const { useAppStore } = await import('../src/store');
        const nodes = useAppStore.getState().nodes;
        return nodes
          .filter((n: any) => n.type === 'task' && n.parentId === parentId)
          .map((n: any) => n.title);
      }, procheeGroup.id));
      throw new Error('–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∑–∞–¥–∞—á–∞: "${targetTask.title}"`);
    console.log(`   –ü–æ–∑–∏—Ü–∏—è: x=${targetTask.x}, y=${targetTask.y}`);

    // 5. –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–∞–¥–∞—á–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ (—Å —É—á–µ—Ç–æ–º levelOrigin)
    const taskCoords = await page.evaluate(async (task: any, groupId: string) => {
      const { useAppStore } = await import('../src/store');
      const state = useAppStore.getState();
      const viewport = state.viewport;
      const nodes = state.nodes;
      
      // –í—ã—á–∏—Å–ª—è–µ–º levelOrigin –¥–ª—è —Ç–µ–∫—É—â–µ–π –≥—Ä—É–ø–ø—ã
      let levelOriginX = 0;
      let levelOriginY = 0;
      
      const group = nodes.find((n: any) => n.id === groupId);
      if (group) {
        levelOriginX = group.x;
        levelOriginY = group.y;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö –≥—Ä—É–ø–ø
        let parentId = group.parentId;
        let hops = 0;
        while (parentId && hops < 10) {
          const parent = nodes.find((n: any) => n.id === parentId);
          if (!parent) break;
          levelOriginX += parent.x;
          levelOriginY += parent.y;
          parentId = parent.parentId;
          hops++;
        }
      }
      
      // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–∞–¥–∞—á–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
      const screenX = (levelOriginX + task.x) * viewport.scale + viewport.x;
      const screenY = (levelOriginY + task.y) * viewport.scale + viewport.y;
      
      return {
        screenX: screenX + (task.width / 2),
        screenY: screenY + (task.height / 2),
        width: task.width,
        height: task.height,
      };
    }, targetTask, procheeGroup.id);

    console.log(`üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∑–∞–¥–∞—á–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ: x=${Math.round(taskCoords.screenX)}, y=${Math.round(taskCoords.screenY)}`);

    // 6. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    await page.evaluate(() => {
      (window as any).__perfMetrics = {
        fps: [],
        frameTimestamps: [],
        dragStartTime: 0,
        frameCount: 0,
      };
      
      let lastFrameTime = performance.now();
      
      const measureFrame = () => {
        const now = performance.now();
        const delta = now - lastFrameTime;
        
        if ((window as any).__perfMetrics.dragStartTime > 0) {
          const fps = 1000 / delta;
          (window as any).__perfMetrics.fps.push(fps);
          (window as any).__perfMetrics.frameTimestamps.push(now);
          (window as any).__perfMetrics.frameCount++;
        }
        
        lastFrameTime = now;
        requestAnimationFrame(measureFrame);
      };
      
      measureFrame();
    });

    console.log('üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ FPS –∑–∞–ø—É—â–µ–Ω');

    // 7. –ü–ï–†–ï–¢–ê–°–ö–ò–í–ê–ù–ò–ï!
    console.log('üñ±Ô∏è  –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ...');
    
    // –ù–∞–≤–æ–¥–∏–º –∫—É—Ä—Å–æ—Ä –Ω–∞ –∑–∞–¥–∞—á—É
    await page.mouse.move(taskCoords.screenX, taskCoords.screenY);
    await page.waitForTimeout(100);

    // –ù–∞—á–∏–Ω–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    await page.evaluate(() => {
      (window as any).__perfMetrics.dragStartTime = performance.now();
    });

    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –º—ã—à–∏
    await page.mouse.down();
    await page.waitForTimeout(50);

    console.log('üéØ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏...');

    // –ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –ø–æ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ (—ç–º—É–ª—è—Ü–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    const steps = 30;
    const deltaX = 200; // 200 –ø–∏–∫—Å–µ–ª–µ–π –≤–ø—Ä–∞–≤–æ
    const deltaY = 150; // 150 –ø–∏–∫—Å–µ–ª–µ–π –≤–Ω–∏–∑
    
    for (let i = 1; i <= steps; i++) {
      const progress = i / steps;
      // Easing –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ (ease-out)
      const eased = 1 - Math.pow(1 - progress, 3);
      
      const newX = taskCoords.screenX + deltaX * eased;
      const newY = taskCoords.screenY + deltaY * eased;
      
      await page.mouse.move(newX, newY);
      await page.waitForTimeout(16); // ~60 FPS
    }

    // –û—Ç–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫—É –º—ã—à–∏
    await page.mouse.up();
    await page.waitForTimeout(100);

    console.log('‚úÖ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');

    // 8. –°–æ–±–∏—Ä–∞–µ–º –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏
    const metrics = await page.evaluate(() => {
      const m = (window as any).__perfMetrics;
      
      if (m.fps.length === 0) {
        return {
          avgFPS: 0,
          minFPS: 0,
          maxFPS: 0,
          frameCount: 0,
          totalDuration: 0,
          droppedFrames: 0,
        };
      }
      
      const avgFPS = m.fps.reduce((a: number, b: number) => a + b, 0) / m.fps.length;
      const minFPS = Math.min(...m.fps);
      const maxFPS = Math.max(...m.fps);
      const totalDuration = m.frameTimestamps[m.frameTimestamps.length - 1] - m.frameTimestamps[0];
      
      // –°—á–∏—Ç–∞–µ–º –¥—Ä–æ–ø–Ω—É—Ç—ã–µ –∫–∞–¥—Ä—ã (< 30 FPS = –ø—Ä–æ–±–ª–µ–º–∞)
      const droppedFrames = m.fps.filter((fps: number) => fps < 30).length;
      
      return {
        avgFPS: Math.round(avgFPS * 10) / 10,
        minFPS: Math.round(minFPS * 10) / 10,
        maxFPS: Math.round(maxFPS * 10) / 10,
        frameCount: m.frameCount,
        totalDuration: Math.round(totalDuration),
        droppedFrames,
      };
    });

    // 9. –í—ã–≤–æ–¥–∏–º –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\n' + '='.repeat(60));
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò');
    console.log('='.repeat(60));
    console.log(`–ó–∞–¥–∞—á–∞: "${targetTask.title}"`);
    console.log(`–ì—Ä—É–ø–ø–∞: "${procheeGroup.name}"`);
    console.log('‚îÄ'.repeat(60));
    console.log(`üéØ –°—Ä–µ–¥–Ω–∏–π FPS:      ${metrics.avgFPS} ${metrics.avgFPS >= 55 ? '‚úÖ' : metrics.avgFPS >= 45 ? '‚ö†Ô∏è' : '‚ùå'}`);
    console.log(`üìâ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π FPS:  ${metrics.minFPS} ${metrics.minFPS >= 45 ? '‚úÖ' : metrics.minFPS >= 30 ? '‚ö†Ô∏è' : '‚ùå'}`);
    console.log(`üìà –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π FPS: ${metrics.maxFPS}`);
    console.log(`üé¨ –í—Å–µ–≥–æ –∫–∞–¥—Ä–æ–≤:     ${metrics.frameCount}`);
    console.log(`‚è±Ô∏è  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:     ${metrics.totalDuration}ms`);
    console.log(`‚ùå –î—Ä–æ–ø–Ω—É—Ç—ã—Ö –∫–∞–¥—Ä–æ–≤: ${metrics.droppedFrames} ${metrics.droppedFrames === 0 ? '‚úÖ' : '‚ö†Ô∏è'}`);
    console.log('‚îÄ'.repeat(60));
    
    // –û—Ü–µ–Ω–∫–∞ –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    let verdict = '';
    let emoji = '';
    
    if (metrics.avgFPS >= 55 && metrics.minFPS >= 45 && metrics.droppedFrames === 0) {
      verdict = '–ò–î–ï–ê–õ–¨–ù–û! –ü–ª–∞–≤–Ω–æ—Å—Ç—å –∫–∞–∫ –º–∞—Å–ª–æ üßà';
      emoji = 'üéâ';
    } else if (metrics.avgFPS >= 45 && metrics.minFPS >= 30) {
      verdict = '–•–æ—Ä–æ—à–æ, –Ω–æ –µ—Å—Ç—å –º–∏–∫—Ä–æ–ª–∞–≥–∏ ‚ö†Ô∏è';
      emoji = 'üëç';
    } else if (metrics.avgFPS >= 30) {
      verdict = '–ó–∞–º–µ—Ç–Ω—ã–µ –ª–∞–≥–∏, –Ω—É–∂–Ω–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è üîß';
      emoji = 'üòê';
    } else {
      verdict = '–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –õ–ê–ì–ò! –¢—Ä–µ–±—É–µ—Ç—Å—è —Å–µ—Ä—å—ë–∑–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è üö®';
      emoji = 'üêå';
    }
    
    console.log(`${emoji} ${verdict}`);
    console.log('='.repeat(60) + '\n');

    // 10. –ü—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è CI
    expect(metrics.avgFPS, '–°—Ä–µ–¥–Ω–∏–π FPS –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å >= 45').toBeGreaterThanOrEqual(45);
    expect(metrics.minFPS, '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π FPS –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å >= 30').toBeGreaterThanOrEqual(30);
    expect(metrics.droppedFrames, '–ù–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–∞–ª–æ–≤').toBeLessThan(5);

    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
  });
});
